#!/bin/bash
# define a set of containers we want to pull from Docker Hub
REGISTRY="{{ registry }}"
REGISTRY_PORT="{{ registry_port }}"
CONTAINERS=(
"gcr.io/google_containers/defaultbackend:1.0" 
"k8s.gcr.io/kube-apiserver:v1.16.3" 
"k8s.gcr.io/kube-controller-manager:v1.16.3" 
"k8s.gcr.io/kube-scheduler:v1.16.3" 
"k8s.gcr.io/kube-proxy:v1.16.3" 
"k8s.gcr.io/pause:3.1" 
"k8s.gcr.io/etcd:3.3.15-0" 
"k8s.gcr.io/coredns:1.6.2" 
"docker.io/calico/cni:v3.10.1" 
"docker.io/calico/pod2daemon-flexvol:v3.10.1" 
"docker.io/calico/node:v3.10.1" 
"docker.io/calico/kube-controllers:v3.10.1" 
"docker.io/hello-world:latest" 
"docker.io/metallb/speaker:v0.8" 
"docker.io/metallb/controller:v0.8" 
"docker.io/kubernetesui/dashboard:v2.0.0-beta5" 
"docker.io/kubernetesui/metrics-scraper:v1.0.2" 
"docker.io/haproxytech/kubernetes-ingress:1.2.2" 
"docker.io/fedora:31" 
"docker.io/ubuntu:18.04" 
"docker.io/ghost:3.0.2" 
"docker.io/alexwhen/docker-2048:latest"
)

# for every container, pull it, retag it and push it to our custom registry
for container in "${CONTAINERS[@]}"; do
    docker pull $container;
    new=$(echo $container | rev | cut -d "/" -f 1 | rev)
    docker tag $container $REGISTRY/$new;
    docker push $REGISTRY/$new;
    docker rmi -f $REGISTRY/$new;
    docker rmi -f $container;
done

exit 0